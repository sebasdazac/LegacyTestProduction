/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/moment@2.30.1/src/lib/moment/prototype.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Moment}from"./constructor";var proto=Moment.prototype;import{add,subtract}from"./add-subtract";import{calendar}from"./calendar";import{clone}from"./clone";import{isBefore,isBetween,isSame,isAfter,isSameOrAfter,isSameOrBefore}from"./compare";import{diff}from"./diff";import{format,toString,toISOString,inspect}from"./format";import{from,fromNow}from"./from";import{to,toNow}from"./to";import{stringGet,stringSet}from"./get-set";import{locale,localeData,lang}from"./locale";import{prototypeMin,prototypeMax}from"./min-max";import{startOf,endOf}from"./start-end-of";import{valueOf,toDate,toArray,toObject,toJSON,unix}from"./to-type";import{isValid,parsingFlags,invalidAt}from"./valid";import{creationData}from"./creation-data";proto.add=add,proto.calendar=calendar,proto.clone=clone,proto.diff=diff,proto.endOf=endOf,proto.format=format,proto.from=from,proto.fromNow=fromNow,proto.to=to,proto.toNow=toNow,proto.get=stringGet,proto.invalidAt=invalidAt,proto.isAfter=isAfter,proto.isBefore=isBefore,proto.isBetween=isBetween,proto.isSame=isSame,proto.isSameOrAfter=isSameOrAfter,proto.isSameOrBefore=isSameOrBefore,proto.isValid=isValid,proto.lang=lang,proto.locale=locale,proto.localeData=localeData,proto.max=prototypeMax,proto.min=prototypeMin,proto.parsingFlags=parsingFlags,proto.set=stringSet,proto.startOf=startOf,proto.subtract=subtract,proto.toArray=toArray,proto.toObject=toObject,proto.toDate=toDate,proto.toISOString=toISOString,proto.inspect=inspect,"undefined"!=typeof Symbol&&null!=Symbol.for&&(proto[Symbol.for("nodejs.util.inspect.custom")]=function(){return"Moment<"+this.format()+">"}),proto.toJSON=toJSON,proto.toString=toString,proto.unix=unix,proto.valueOf=valueOf,proto.creationData=creationData;import{getEraName,getEraNarrow,getEraAbbr,getEraYear}from"../units/era";proto.eraName=getEraName,proto.eraNarrow=getEraNarrow,proto.eraAbbr=getEraAbbr,proto.eraYear=getEraYear;import{getSetYear,getIsLeapYear}from"../units/year";proto.year=getSetYear,proto.isLeapYear=getIsLeapYear;import{getSetWeekYear,getSetISOWeekYear,getWeeksInYear,getWeeksInWeekYear,getISOWeeksInYear,getISOWeeksInISOWeekYear}from"../units/week-year";proto.weekYear=getSetWeekYear,proto.isoWeekYear=getSetISOWeekYear;import{getSetQuarter}from"../units/quarter";proto.quarter=proto.quarters=getSetQuarter;import{getSetMonth,getDaysInMonth}from"../units/month";proto.month=getSetMonth,proto.daysInMonth=getDaysInMonth;import{getSetWeek,getSetISOWeek}from"../units/week";proto.week=proto.weeks=getSetWeek,proto.isoWeek=proto.isoWeeks=getSetISOWeek,proto.weeksInYear=getWeeksInYear,proto.weeksInWeekYear=getWeeksInWeekYear,proto.isoWeeksInYear=getISOWeeksInYear,proto.isoWeeksInISOWeekYear=getISOWeeksInISOWeekYear;import{getSetDayOfMonth}from"../units/day-of-month";import{getSetDayOfWeek,getSetISODayOfWeek,getSetLocaleDayOfWeek}from"../units/day-of-week";import{getSetDayOfYear}from"../units/day-of-year";proto.date=getSetDayOfMonth,proto.day=proto.days=getSetDayOfWeek,proto.weekday=getSetLocaleDayOfWeek,proto.isoWeekday=getSetISODayOfWeek,proto.dayOfYear=getSetDayOfYear;import{getSetHour}from"../units/hour";proto.hour=proto.hours=getSetHour;import{getSetMinute}from"../units/minute";proto.minute=proto.minutes=getSetMinute;import{getSetSecond}from"../units/second";proto.second=proto.seconds=getSetSecond;import{getSetMillisecond}from"../units/millisecond";proto.millisecond=proto.milliseconds=getSetMillisecond;import{getSetOffset,setOffsetToUTC,setOffsetToLocal,setOffsetToParsedOffset,hasAlignedHourOffset,isDaylightSavingTime,isDaylightSavingTimeShifted,getSetZone,isLocal,isUtcOffset,isUtc}from"../units/offset";proto.utcOffset=getSetOffset,proto.utc=setOffsetToUTC,proto.local=setOffsetToLocal,proto.parseZone=setOffsetToParsedOffset,proto.hasAlignedHourOffset=hasAlignedHourOffset,proto.isDST=isDaylightSavingTime,proto.isLocal=isLocal,proto.isUtcOffset=isUtcOffset,proto.isUtc=isUtc,proto.isUTC=isUtc;import{getZoneAbbr,getZoneName}from"../units/timezone";proto.zoneAbbr=getZoneAbbr,proto.zoneName=getZoneName;import{deprecate}from"../utils/deprecate";proto.dates=deprecate("dates accessor is deprecated. Use date instead.",getSetDayOfMonth),proto.months=deprecate("months accessor is deprecated. Use month instead",getSetMonth),proto.years=deprecate("years accessor is deprecated. Use year instead",getSetYear),proto.zone=deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",getSetZone),proto.isDSTShifted=deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",isDaylightSavingTimeShifted);export default proto;
//# sourceMappingURL=/sm/21a249cc622ce391499012cd8696d5e0e40942d153285150e1d879f611f6b29a.map