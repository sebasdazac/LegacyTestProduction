@{
    Layout = null;
}
@using LegacyTest.Models.ReportAux

@model ResponseReport

<!DOCTYPE html>
<html lang="es">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title> Legacy Test</title>

    <link href="~/css/legacy-bootstrap.css" rel="stylesheet" />
    <link href="~/css/legacy-color.css" rel="stylesheet" />

    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
</head>
<body>

    <style>
        .text-justify {
            text-align: justify;
        }
        /* Estilos generales */
        body {
            margin: 0;
            padding: 0;
        }

        html {
            font-size: 0.8rem;
        }

        /* Cada página */
        .frontpage {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño exacto de A4 */
            background-image: url('@Url.Content("~/img/brochure1.svg")');
            background-size: 215.9mm 279.4mm; /* Escalar SVG al tamaño exacto de A4 */
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura que el fondo se repita en cada página */
        }

        /* Cada página */
        .table-contents {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño exacto de A4 */
            background-image: url('@Url.Content("~/img/brochure2.svg")');
            background-size: 215.9mm 279.4mm; /* Escalar SVG al tamaño exacto de A4 */
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura que el fondo se repita en cada página */
        }


        .content-frontpage {
            position: absolute;
            top: 0;
            left: 0;
            padding: 150mm 10mm 25mm 10mm;
            z-index: 1; /* Para superponer el contenido al fondo */
        }

        .content-table {
            position: absolute;
            top: 0;
            left: 0;
            padding: 100mm 15mm 25mm 40mm;
            z-index: 1; /* Para superponer el contenido al fondo */
        }



        .page3 {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño A4 */
            background-image: url('@Url.Content("~/img/brochure3.svg")');
            background-size: 215.9mm 279.4mm;
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura el mismo fondo en cada página */
        }



        .page4 {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño A4 */
            background-image: url('@Url.Content("~/img/brochure4.svg")');
            background-size: 215.9mm 279.4mm;
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura el mismo fondo en cada página */
        }


        .page5 {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño A4 */
            background-image: url('@Url.Content("~/img/brochure5.svg")');
            background-size: 215.9mm 279.4mm;
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura el mismo fondo en cada página */
        }


        .page6 {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño A4 */
            background-image: url('@Url.Content("~/img/brochure6.svg")');
            background-size: 215.9mm 279.4mm;
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura el mismo fondo en cada página */
        }


        .page8 {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño A4 */
            background-image: url('@Url.Content("~/img/brochure8.svg")');
            background-size: 215.9mm 279.4mm;
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura el mismo fondo en cada página */
        }


        .page9 {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño A4 */
            background-image: url('@Url.Content("~/img/brochure9.svg")');
            background-size: 215.9mm 279.4mm;
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura el mismo fondo en cada página */
        }




        .page {
            position: relative;
            width: 215.9mm;
            height: 279.4mm; /* Tamaño A4 */
            background-image: url('@Url.Content("~/img/brochure.svg")');
            background-size: 215.9mm 279.4mm;
            background-repeat: no-repeat;
            background-position: center;
            page-break-after: always; /* Asegura el mismo fondo en cada página */
        }

        /* Asegurar que el contenido tenga márgenes */
        .content {
            position: relative;
            padding: 40mm 15mm 40mm 40mm;
            z-index: 1;
            box-sizing: border-box; /* Asegura que los márgenes no se excedan */
        }


        .avoid-break {
            page-break-inside: avoid;
        }

    </style>

    <div class="frontpage">
        <div class="content-frontpage container-fluid d-flex flex-column" style="min-height: 100vh;">
            <div class="row justify-content-center mt-5">
                <div class="col-12 text-center">
                    <h2 style="line-height: 1.5; max-width: 100mm; margin: 0 auto;" class="blue2 fw-bold">@Model.Form.NameForm</h2>
                    <p class="text-white">@DateTime.Now.ToString("yyyy/MM/dd")</p>
                </div>
            </div>
            <div class="row mt-auto">
                <div class="col-12 text-end">
                    <h3 style="line-height: 1.25; max-width: 100mm; margin-left: auto;" class="fw-bold blue2">EMPRESA DEMO</h3>
                </div>
            </div>
        </div>
    </div>

    <div class="table-contents">
        <div class="content-table container-fluid">
            <div class="row">
                <div class="col-12">
                    <p class="blue2 fw-bold fs-2 ">1. Definición Formulario: @Model.Form.NameForm</p>
                    <p class="blue2 fw-bold fs-2 ">2. Diagnóstico de la empresa, cuadros y resumen</p>
                    <p class="blue2 fw-bold fs-2 ">3. Efectos y Recomendaciones</p>
                </div>
            </div>
        </div>
    </div>


    <div class="page3"></div>
    <div class="page4"></div>
    <div class="page5"></div>
    <div class="page6"></div>


    @{
        // Declaramos las variables fuera de cualquier bloque de código HTML
        int rowsPerPage = 3; // Número de filas por página
        int totalRows = Model.Scales.Count(); // Total de filas en el modelo
        int currentPage = 0; // Página actual
        int remainingRows = totalRows; // Número de filas restantes
    }

    <div class="page">
        <h6 class="fw-bold ">
            @Model.Form.NameForm
        </h6>
        <div class="content container-fluid">
            <!-- Contenido específico de la primera página -->
            @* <div class="row">
            <div class="col-12">
            <div class="bg-blue2 mb-4 p-2">
            <h6 class="text-center text-white fw-bold ">
            @Model.Form.NameForm
            </h6>
            </div>
            </div>
            </div> *@

            <div class="row mb-2">
                <div class="col-12">
                    <p class="text-justify">@Model.Form.DescriptionReport</p>
                </div>
            </div>

            <!-- Tabla en la primera página -->
            <div class="row mb-1">
                <div class="col-12">
                    @if (Model.Scales.Count() > 0)
                    {
                        <table class="table table-bordered">
                            <thead class="text-white bg-blue2">
                                <tr>
                                    <th class="text-center w-25">@Model.Scales.Distinct().Select(x => x.Title.ToUpper()).FirstOrDefault()</th>
                                    <th class="text-center w-75" scope="col">DESCRIPCIÓN</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var scale in @Model.Scales.Take(rowsPerPage)) // Solo las primeras filas
                                {
                                    <tr>
                                        <td class="w-25 p-3">@scale.Category</td>
                                        <td class="text-justify w-75 p-3">@scale.Description</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Crear nuevas páginas si la tabla excede las filas de la primera página -->
    @{
        remainingRows -= rowsPerPage; // Restamos las filas ya mostradas
        currentPage++; // Pasamos a la siguiente página
    }

    @while (remainingRows > 0)
    {
        <div class="page">
            <div class="content container-fluid">
                <!-- Tabla para las páginas siguientes -->
                <div class="row mb-1">
                    <div class="col-12">
                        <table class="table table-bordered">
                            <thead class="text-white bg-blue2">
                                <tr>
                                    <th class="text-center w-25">@Model.Scales.Distinct().Select(x => x.Title.ToUpper()).FirstOrDefault()</th>
                                    <th class="text-center w-75" scope="col">DESCRIPCIÓN</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var scale in @Model.Scales.Skip(currentPage * rowsPerPage).Take(rowsPerPage))
                                {
                                    <tr>
                                        <td class="w-25 p-3">@scale.Category</td>
                                        <td class="text-justify w-75 p-3">@scale.Description</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        remainingRows -= rowsPerPage; // Restamos las filas mostradas
        currentPage++; // Incrementamos la página actual

        if (remainingRows > 0)
        {
            <div style="page-break-after: always;"></div> <!-- Forzar salto de página -->
        }
    }





    <div class="page">
        <div class="content container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="bg-blue2 mb-4 p-2">
                        <h6 class="text-center text-white fw-bold ">
                            Diagnóstico Actual
                        </h6>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    @{
                        string path = $"~/Views/Pdf/_chart{@Model.Form.Id}.cshtml";
                        @Html.Partial(path)
                    }
                </div>
            </div>
        </div>
    </div>

    @*
    <div class="page">
    <div class="content container-fluid">
    <div class="row">
    <div class="col-12">
    <div class="bg-blue3 mb-3 p-2">
    <h6 class="text-center text-white fw-bold ">
    Efectos y Recomendaciones
    </h6>
    </div>
    </div>
    </div>
    @foreach (var item in Model.CombinedResults)
    {
    <div class="row mb-3 avoid-break">
    <div class="col-12">
    <div class="card">
    <div class="card-header  bg-blue1 text-white fs-6  fw-bold">
    @item.Characterization
    <div class="progress mt-2" id="progress-@item.IdCharacterization" role="progressbar" aria-label="Example with label" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" hidden>
    <div class="progress-bar" style="width: 25%">25%</div>
    </div>
    </div>
    <div class="card-body">
    <div class="row mb-2">
    <div class="col-12">
    <div class="card">
    <div class="card-header bg-light-gray  fw-bold">
    Efectos
    </div>
    <div class="card-body">
    @foreach (var effect in item.Effects)
    {
    <div class="effect-item text-justify">
    @effect.EffectDescription
    </div>
    <hr />
    }
    </div>
    </div>
    </div>
    </div>
    <div class="row mb-2">
    <div class="col-12">
    <div class="card">
    <div class="card-header bg-blue text-white  fw-bold">
    Recomendaciones
    </div>
    <div class="card-body">
    @foreach (var recommendation in item.Recommendations)
    {
    <div class="recommendation-item text-justify">
    @recommendation.RecommendationDescription
    </div>
    <hr />
    }
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    }

    </div>
    </div>
    *@

    @{
        int cardsPerSet = 2; // Número de cards por página
        int totalCombinedCards = Model.CombinedResults.Count();
    }

    @for (int j = 0; j < totalCombinedCards; j += cardsPerSet)
    {
        <!-- Nueva página -->
        <div class="page">
            <div class="content container-fluid">
                <div class="row">
                    <div class="col-12">
                        <div class="bg-blue3 mb-3 p-2">
                            <h6 class="text-center text-white fw-bold">
                                Efectos y Recomendaciones
                            </h6>
                        </div>
                    </div>
                </div>

                <!-- Mostrar los cards de CombinedResults -->
                @foreach (var item in Model.CombinedResults.Skip(j).Take(cardsPerSet))
                {
                    <div class="row mb-3 avoid-break">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header bg-blue1 text-white fs-6 fw-bold">
                                    @item.Characterization
                                    <div class="progress mt-2" id="progress-@item.IdCharacterization" role="progressbar" aria-label="Example with label" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" hidden>
                                        <div class="progress-bar" style="width: 25%">25%</div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-2">
                                        <div class="col-12">
                                            <div class="card">
                                                <div class="card-header bg-light-gray fw-bold">
                                                    Efectos
                                                </div>
                                                <div class="card-body">
                                                    @foreach (var effect in item.Effects)
                                                    {
                                                        <div class="effect-item text-justify">
                                                            @effect.EffectDescription
                                                        </div>
                                                        <hr />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-12">
                                            <div class="card">
                                                <div class="card-header bg-blue text-white fw-bold">
                                                    Recomendaciones
                                                </div>
                                                <div class="card-body">
                                                    @foreach (var recommendation in item.Recommendations)
                                                    {
                                                        <div class="recommendation-item text-justify">
                                                            @recommendation.RecommendationDescription
                                                        </div>
                                                        <hr />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Salto de página si hay más cards que mostrar -->
                @if (j + cardsPerSet < totalCombinedCards)
                {
                    <div style="page-break-after: always;"></div>
                }
            </div>
        </div>
    }


    <div class="page8"></div>

    <div class="page9"></div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-matrix@1"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@1.2.1"></script>
    <script src="~/js/main.js"></script>
    <script>
        var param = @Model.IdCompany
    </script>
    <script src="~/js/pdf/chart1.js"></script>



</body>
</html>
